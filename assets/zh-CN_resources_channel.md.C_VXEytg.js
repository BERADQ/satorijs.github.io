import{_ as l,R as r,l as o,f as t,m as d,w as h,$ as e,a6 as n,a as _}from"./chunks/framework.DbNgHyU8.js";const j=JSON.parse('{"title":"频道 (Channel)","description":"","frontmatter":{},"headers":[],"relativePath":"zh-CN/resources/channel.md","filePath":"zh-CN/resources/channel.md"}'),s={name:"zh-CN/resources/channel.md"},c=n('<h1 id="频道" tabindex="-1">频道 (Channel) <a class="header-anchor" href="#频道" aria-label="Permalink to &quot;频道 (Channel)&quot;">​</a></h1><h2 id="类型定义" tabindex="-1">类型定义 <a class="header-anchor" href="#类型定义" aria-label="Permalink to &quot;类型定义&quot;">​</a></h2><h3 id="channel" tabindex="-1">Channel <a class="header-anchor" href="#channel" aria-label="Permalink to &quot;Channel&quot;">​</a></h3><table><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>id</td><td>string</td><td>频道 ID</td></tr><tr><td>type</td><td><a href="#channel-type">Channel.Type</a></td><td>频道类型</td></tr><tr><td>name</td><td>string?</td><td>频道名称</td></tr><tr><td>parent_id</td><td>string?</td><td>父频道 ID</td></tr></tbody></table><h3 id="channel-type" tabindex="-1">Channel.Type <a class="header-anchor" href="#channel-type" aria-label="Permalink to &quot;Channel.Type&quot;">​</a></h3><table><thead><tr><th>名称</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>TEXT</td><td>0</td><td>文本频道</td></tr><tr><td>DIRECT</td><td>1</td><td>私聊频道</td></tr><tr><td>CATEGORY</td><td>2</td><td>分类频道</td></tr><tr><td>VOICE</td><td>3</td><td>语音频道</td></tr></tbody></table><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h3 id="获取群组频道" tabindex="-1">获取群组频道 <a class="header-anchor" href="#获取群组频道" aria-label="Permalink to &quot;获取群组频道&quot;">​</a></h3>',8),i={class:"route"},u=t("code",null,"/channel.get",-1),b=n('<table><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>channel_id</td><td>string</td><td>频道 ID</td></tr></tbody></table><p>根据 ID 获取频道。返回一个 <a href="#channel">Channel</a> 对象。</p><h3 id="获取群组频道列表" tabindex="-1">获取群组频道列表 <a class="header-anchor" href="#获取群组频道列表" aria-label="Permalink to &quot;获取群组频道列表&quot;">​</a></h3>',3),T={class:"route"},p=t("code",null,"/channel.list",-1),f=n('<table><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>guild_id</td><td>string</td><td>群组 ID</td></tr><tr><td>next</td><td>string?</td><td>分页令牌</td></tr></tbody></table><p>获取群组中的全部频道。返回一个 <a href="#channel">Channel</a> 的 <a href="./../protocol/api.html#分页">分页列表</a>。</p><h3 id="创建群组频道" tabindex="-1">创建群组频道 <a class="header-anchor" href="#创建群组频道" aria-label="Permalink to &quot;创建群组频道&quot;">​</a></h3>',3),P={class:"route"},C=t("code",null,"/channel.create",-1),S=n('<table><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>guild_id</td><td>string</td><td>群组 ID</td></tr><tr><td>data</td><td><a href="#channel">Channel</a></td><td>频道数据</td></tr></tbody></table><p>创建群组频道。返回一个 <a href="#channel">Channel</a> 对象。</p><h3 id="修改群组频道" tabindex="-1">修改群组频道 <a class="header-anchor" href="#修改群组频道" aria-label="Permalink to &quot;修改群组频道&quot;">​</a></h3>',3),q={class:"route"},I=t("code",null,"/channel.update",-1),m=n('<table><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>channel_id</td><td>string</td><td>频道 ID</td></tr><tr><td>data</td><td><a href="#channel">Channel</a></td><td>频道数据</td></tr></tbody></table><p>修改群组频道。</p><h3 id="删除群组频道" tabindex="-1">删除群组频道 <a class="header-anchor" href="#删除群组频道" aria-label="Permalink to &quot;删除群组频道&quot;">​</a></h3>',3),y={class:"route"},A=t("code",null,"/channel.delete",-1),g=t("table",null,[t("thead",null,[t("tr",null,[t("th",null,"字段"),t("th",null,"类型"),t("th",null,"描述")])]),t("tbody",null,[t("tr",null,[t("td",null,"channel_id"),t("td",null,"string"),t("td",null,"频道 ID")])])],-1),k=t("p",null,"删除群组频道。",-1),D={id:"禁言群组频道",tabindex:"-1"},V=t("a",{class:"header-anchor",href:"#禁言群组频道","aria-label":'Permalink to "禁言群组频道 <badge type="warning">实验性</badge>"'},"​",-1),x={class:"route"},N=t("code",null,"/channel.mute",-1),E=n('<table><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>channel_id</td><td>string</td><td>频道 ID</td></tr><tr><td>duration</td><td>number</td><td>禁言时长 (毫秒)</td></tr></tbody></table><p>禁言群组频道。如果传入的禁言时长为 <code>0</code> 则表示解除禁言。</p><h3 id="创建私聊频道" tabindex="-1">创建私聊频道 <a class="header-anchor" href="#创建私聊频道" aria-label="Permalink to &quot;创建私聊频道&quot;">​</a></h3>',3),O={class:"route"},R=t("code",null,"/user.channel.create",-1),$=n('<table><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>user_id</td><td>string</td><td>用户 ID</td></tr><tr><td>guild_id</td><td>string?</td><td>群组 ID</td></tr></tbody></table><p>创建一个私聊频道。返回一个 <a href="#channel">Channel</a> 对象。</p>',2);function w(v,z,B,G,J,X){const a=r("badge");return _(),o("div",null,[c,t("blockquote",i,[d(a,null,{default:h(()=>[e("POST")]),_:1}),u]),b,t("blockquote",T,[d(a,null,{default:h(()=>[e("POST")]),_:1}),p]),f,t("blockquote",P,[d(a,null,{default:h(()=>[e("POST")]),_:1}),C]),S,t("blockquote",q,[d(a,null,{default:h(()=>[e("POST")]),_:1}),I]),m,t("blockquote",y,[d(a,null,{default:h(()=>[e("POST")]),_:1}),A]),g,k,t("h3",D,[e("禁言群组频道 "),d(a,{type:"warning"},{default:h(()=>[e("实验性")]),_:1}),e(),V]),t("blockquote",x,[d(a,null,{default:h(()=>[e("POST")]),_:1}),N]),E,t("blockquote",O,[d(a,null,{default:h(()=>[e("POST")]),_:1}),R]),$])}const F=l(s,[["render",w]]);export{j as __pageData,F as default};
