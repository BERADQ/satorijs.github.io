import{_ as l,R as i,l as h,f as t,m as a,w as r,$ as e,a6 as o,a as _}from"./chunks/framework.DbNgHyU8.js";const O=JSON.parse('{"title":"群组成员 (GuildMember)","description":"","frontmatter":{},"headers":[],"relativePath":"zh-CN/resources/member.md","filePath":"zh-CN/resources/member.md"}'),s={name:"zh-CN/resources/member.md"},u=o('<h1 id="群组成员" tabindex="-1">群组成员 (GuildMember) <a class="header-anchor" href="#群组成员" aria-label="Permalink to &quot;群组成员 (GuildMember)&quot;">​</a></h1><h2 id="类型定义" tabindex="-1">类型定义 <a class="header-anchor" href="#类型定义" aria-label="Permalink to &quot;类型定义&quot;">​</a></h2><h3 id="guildmember" tabindex="-1">GuildMember <a class="header-anchor" href="#guildmember" aria-label="Permalink to &quot;GuildMember&quot;">​</a></h3><table><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>user</td><td><a href="./user.html#user">User</a>?</td><td>用户对象</td></tr><tr><td>nick</td><td>string?</td><td>用户在群组中的名称</td></tr><tr><td>avatar</td><td>string?</td><td>用户在群组中的头像</td></tr><tr><td>joined_at</td><td>number?</td><td>加入时间</td></tr></tbody></table><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h3 id="获取群组成员" tabindex="-1">获取群组成员 <a class="header-anchor" href="#获取群组成员" aria-label="Permalink to &quot;获取群组成员&quot;">​</a></h3>',6),n={class:"route"},c=t("code",null,"/guild.member.get",-1),m=o('<table><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>guild_id</td><td>string</td><td>群组 ID</td></tr><tr><td>user_id</td><td>string</td><td>用户 ID</td></tr></tbody></table><p>获取群成员信息。返回一个 <a href="#guildmember">GuildMember</a> 对象。</p><h3 id="获取群组成员列表" tabindex="-1">获取群组成员列表 <a class="header-anchor" href="#获取群组成员列表" aria-label="Permalink to &quot;获取群组成员列表&quot;">​</a></h3>',3),b={class:"route"},g=t("code",null,"/guild.member.list",-1),p=o('<table><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>guild_id</td><td>string</td><td>群组 ID</td></tr><tr><td>next</td><td>string?</td><td>分页令牌</td></tr></tbody></table><p>获取群成员列表。返回一个 <a href="#guildmember">GuildMember</a> 的 <a href="./../protocol/api.html#分页">分页列表</a>。</p><h3 id="踢出群组成员" tabindex="-1">踢出群组成员 <a class="header-anchor" href="#踢出群组成员" aria-label="Permalink to &quot;踢出群组成员&quot;">​</a></h3>',3),T={class:"route"},q=t("code",null,"/guild.member.kick",-1),P=o("<table><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>guild_id</td><td>string</td><td>群组 ID</td></tr><tr><td>user_id</td><td>string</td><td>用户 ID</td></tr><tr><td>permanent</td><td>boolean?</td><td>是否永久踢出 (无法再次加入群组)</td></tr></tbody></table><p>将某个用户踢出群组。</p>",2),f={id:"禁言群组成员",tabindex:"-1"},S=t("a",{class:"header-anchor",href:"#禁言群组成员","aria-label":'Permalink to "禁言群组成员 <badge type="warning">实验性</badge>"'},"​",-1),k={class:"route"},I=t("code",null,"/guild.member.mute",-1),x=o('<table><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>guild_id</td><td>string</td><td>群组 ID</td></tr><tr><td>user_id</td><td>string</td><td>用户 ID</td></tr><tr><td>duration</td><td>number</td><td>禁言时长 (毫秒)</td></tr></tbody></table><p>将某个用户禁言。如果传入的禁言时长为 <code>0</code> 则表示解除禁言。</p><h3 id="通过群组成员申请" tabindex="-1">通过群组成员申请 <a class="header-anchor" href="#通过群组成员申请" aria-label="Permalink to &quot;通过群组成员申请&quot;">​</a></h3>',3),A={class:"route"},C=t("code",null,"/guild.member.approve",-1),V=o('<table><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>message_id</td><td>string</td><td>请求 ID</td></tr><tr><td>approve</td><td>boolean</td><td>是否通过请求</td></tr><tr><td>comment</td><td>string?</td><td>备注信息</td></tr></tbody></table><p>处理加群请求。</p><h2 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h2><h3 id="guild-member-added" tabindex="-1">guild-member-added <a class="header-anchor" href="#guild-member-added" aria-label="Permalink to &quot;guild-member-added&quot;">​</a></h3><p>群组成员增加时触发。必需资源：<code>guild</code>，<code>member</code>，<code>user</code>。</p><h3 id="guild-member-updated" tabindex="-1">guild-member-updated <a class="header-anchor" href="#guild-member-updated" aria-label="Permalink to &quot;guild-member-updated&quot;">​</a></h3><p>群组成员信息更新时触发。必需资源：<code>guild</code>，<code>member</code>，<code>user</code>。</p><h3 id="guild-member-removed" tabindex="-1">guild-member-removed <a class="header-anchor" href="#guild-member-removed" aria-label="Permalink to &quot;guild-member-removed&quot;">​</a></h3><p>群组成员移除时触发。必需资源：<code>guild</code>，<code>member</code>，<code>user</code>。</p><h3 id="guild-member-request" tabindex="-1">guild-member-request <a class="header-anchor" href="#guild-member-request" aria-label="Permalink to &quot;guild-member-request&quot;">​</a></h3><p>接收到新的加群请求时触发。必需资源：<code>guild</code>，<code>member</code>，<code>user</code>。</p>',11);function D(y,N,v,E,G,M){const d=i("badge");return _(),h("div",null,[u,t("blockquote",n,[a(d,null,{default:r(()=>[e("POST")]),_:1}),c]),m,t("blockquote",b,[a(d,null,{default:r(()=>[e("POST")]),_:1}),g]),p,t("blockquote",T,[a(d,null,{default:r(()=>[e("POST")]),_:1}),q]),P,t("h3",f,[e("禁言群组成员 "),a(d,{type:"warning"},{default:r(()=>[e("实验性")]),_:1}),e(),S]),t("blockquote",k,[a(d,null,{default:r(()=>[e("POST")]),_:1}),I]),x,t("blockquote",A,[a(d,null,{default:r(()=>[e("POST")]),_:1}),C]),V])}const $=l(s,[["render",D]]);export{O as __pageData,$ as default};
