import{_ as o,R as h,l,f as t,m as a,w as s,a6 as e,a as c,$ as r}from"./chunks/framework.DbNgHyU8.js";const O=JSON.parse('{"title":"消息 (Message)","description":"","frontmatter":{},"headers":[],"relativePath":"zh-CN/resources/message.md","filePath":"zh-CN/resources/message.md"}'),n={name:"zh-CN/resources/message.md"},_=e('<h1 id="消息" tabindex="-1">消息 (Message) <a class="header-anchor" href="#消息" aria-label="Permalink to &quot;消息 (Message)&quot;">​</a></h1><h2 id="类型定义" tabindex="-1">类型定义 <a class="header-anchor" href="#类型定义" aria-label="Permalink to &quot;类型定义&quot;">​</a></h2><h3 id="message" tabindex="-1">Message <a class="header-anchor" href="#message" aria-label="Permalink to &quot;Message&quot;">​</a></h3><table><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>id</td><td>string</td><td>消息 ID</td></tr><tr><td>content</td><td>string</td><td>消息内容</td></tr><tr><td>channel</td><td><a href="./channel.html#channel">Channel</a>?</td><td>频道对象</td></tr><tr><td>guild</td><td><a href="./guild.html#guild">Guild</a>?</td><td>群组对象</td></tr><tr><td>member</td><td><a href="./member.html#member">Member</a>?</td><td>成员对象</td></tr><tr><td>user</td><td><a href="./user.html#user">User</a>?</td><td>用户对象</td></tr><tr><td>created_at</td><td>number?</td><td>消息发送的时间戳</td></tr><tr><td>updated_at</td><td>number?</td><td>消息修改的时间戳</td></tr></tbody></table><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h3 id="发送消息" tabindex="-1">发送消息 <a class="header-anchor" href="#发送消息" aria-label="Permalink to &quot;发送消息&quot;">​</a></h3>',6),i={class:"route"},u=t("code",null,"/message.create",-1),m=e('<table><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>channel_id</td><td>string</td><td>频道 ID</td></tr><tr><td>content</td><td>string</td><td>消息内容</td></tr></tbody></table><p>发送消息。返回一个 <a href="#message"><code>Message</code></a> 对象构成的数组。</p><h3 id="获取消息" tabindex="-1">获取消息 <a class="header-anchor" href="#获取消息" aria-label="Permalink to &quot;获取消息&quot;">​</a></h3>',3),b={class:"route"},g=t("code",null,"/message.get",-1),T=e('<table><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>channel_id</td><td>string</td><td>频道 ID</td></tr><tr><td>message_id</td><td>string</td><td>消息 ID</td></tr></tbody></table><p>获取特定消息。返回一个 <a href="#message"><code>Message</code></a> 对象。必需资源：<code>channel</code>，<code>user</code>。</p><h3 id="撤回消息" tabindex="-1">撤回消息 <a class="header-anchor" href="#撤回消息" aria-label="Permalink to &quot;撤回消息&quot;">​</a></h3>',3),p={class:"route"},f=t("code",null,"/message.delete",-1),P=e('<table><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>channel_id</td><td>string</td><td>频道 ID</td></tr><tr><td>message_id</td><td>string</td><td>消息 ID</td></tr></tbody></table><p>撤回特定消息。</p><h3 id="编辑消息" tabindex="-1">编辑消息 <a class="header-anchor" href="#编辑消息" aria-label="Permalink to &quot;编辑消息&quot;">​</a></h3>',3),q={class:"route"},S=t("code",null,"/message.update",-1),I=e('<table><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>channel_id</td><td>string</td><td>频道 ID</td></tr><tr><td>message_id</td><td>string</td><td>消息 ID</td></tr><tr><td>content</td><td>string</td><td>消息内容</td></tr></tbody></table><p>编辑特定消息。</p><h3 id="获取消息列表" tabindex="-1">获取消息列表 <a class="header-anchor" href="#获取消息列表" aria-label="Permalink to &quot;获取消息列表&quot;">​</a></h3>',3),k={class:"route"},A=t("code",null,"/message.list",-1),x=e('<table><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>channel_id</td><td>string</td><td>频道 ID</td></tr><tr><td>next</td><td>string?</td><td>分页令牌</td></tr></tbody></table><p>获取频道消息列表。返回一个 <a href="#message"><code>Message</code></a> 的 <a href="./../protocol/api.html#分页">分页列表</a>。必需资源：<code>channel</code>，<code>user</code>。</p><h2 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h2><h3 id="message-created" tabindex="-1">message-created <a class="header-anchor" href="#message-created" aria-label="Permalink to &quot;message-created&quot;">​</a></h3><p>当消息被创建时触发。必需资源：<code>channel</code>，<code>message</code>，<code>user</code>。</p><h3 id="message-updated" tabindex="-1">message-updated <a class="header-anchor" href="#message-updated" aria-label="Permalink to &quot;message-updated&quot;">​</a></h3><p>当消息被编辑时触发。必需资源：<code>channel</code>，<code>message</code>，<code>user</code>。</p><h3 id="message-deleted" tabindex="-1">message-deleted <a class="header-anchor" href="#message-deleted" aria-label="Permalink to &quot;message-deleted&quot;">​</a></h3><p>当消息被删除时触发。必需资源：<code>channel</code>，<code>message</code>，<code>user</code>。</p>',9);function C(D,V,N,y,M,E){const d=h("badge");return c(),l("div",null,[_,t("blockquote",i,[a(d,null,{default:s(()=>[r("POST")]),_:1}),u]),m,t("blockquote",b,[a(d,null,{default:s(()=>[r("POST")]),_:1}),g]),T,t("blockquote",p,[a(d,null,{default:s(()=>[r("POST")]),_:1}),f]),P,t("blockquote",q,[a(d,null,{default:s(()=>[r("POST")]),_:1}),S]),I,t("blockquote",k,[a(d,null,{default:s(()=>[r("POST")]),_:1}),A]),x])}const $=o(n,[["render",C]]);export{O as __pageData,$ as default};
